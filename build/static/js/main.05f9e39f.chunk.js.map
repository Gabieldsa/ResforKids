{"version":3,"sources":["assets/whatever.mp3","services/api.js","Components/ResponsivePlayer/index.js","Components/Quiz/index.js","pages/Main/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","create","baseURL","ResponsivePlayer","url","className","width","height","controls","Quiz","quizId","useState","perguntas","setPerguntas","imagemPergunta","setImagem","audio","setAudio","useEffect","method","responseType","then","response","data","map","pergunta","imagem","imgPergunta","audioPergunta","console","log","id","src","alt","onClick","Container","bsPrefix","Row","htmlFor","type","name","value","Col","Main","useSound","musica","download","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","Jumbotron","Routes","component","path","exact","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05f9e39f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatever.0cb7cf3f.mp3\";","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: ',https://resbackimagens.herokuapp.com/',\n});\n\nexport default api;\n","import React from 'react';\nimport ReactPlayer from 'react-player';\nimport './responsive-player.css';\n\nconst ResponsivePlayer = ({ url }) => {\n  return (\n    <div className=\"player-wrapper\">\n      <ReactPlayer\n        className=\"react-player\"\n        url={url}\n        width=\"100%\"\n        height=\"100%\"\n        controls={true}\n      />\n    </div>\n  );\n};\n\nexport default ResponsivePlayer;\n","import React, { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { FiVolume2, FiArrowLeft, FiArrowRight } from 'react-icons/fi';\n\nimport './styles.css';\n\nconst Quiz = ({ quizId }) => {\n  const [perguntas, setPerguntas] = useState([]);\n  const [imagemPergunta, setImagem] = useState([]);\n  const [audio, setAudio] = useState([]);\n\n  useEffect(() => {\n    axios({\n      url: `https://resbackimagens.herokuapp.com/perguntas-quiz?quizId=${2}`, //your url\n      method: 'GET',\n      responseType: 'json', // important\n    }).then((response) => {\n      const data = response.data;\n      const perguntas = data.map((pergunta) => {\n        return pergunta.pergunta;\n      });\n      const imagemPergunta = data.map((imagem) => {\n        return imagem.imgPergunta;\n      });\n      const audioPergunta = data.map((audio) => {\n        return audio.audioPergunta;\n      });\n      setPerguntas(perguntas);\n      setImagem(imagemPergunta);\n      setAudio(audioPergunta);\n    });\n  }, []);\n  console.log(imagemPergunta);\n  return (\n    <div>\n      <div className=\"containerPergunta\">\n        <div id=\"item1\">\n          <img src={imagemPergunta[0]} alt=\"imagem da pergunta\" />\n        </div>\n        <div id=\"item2\">\n          <p>{perguntas[1]}</p>\n          <button id=\"audioPergunta\">\n            <FiVolume2 onClick={audio} />\n          </button>\n        </div>\n      </div>\n\n      <Container bsPrefix=\"containerResposta\">\n        <Row>\n          <label htmlFor=\"01\">\n            <input type=\"radio\" name=\"opcao\" id=\"01\" value=\"01\" />\n            <img src={imagemPergunta[0]} alt=\"Masculino\" />\n            <div>\n              <button id=\"audioResposta\" onClick={audio}>\n                <FiVolume2 />\n              </button>\n            </div>\n          </label>\n          <label htmlFor=\"02\">\n            <input type=\"radio\" name=\"opcao\" id=\"02\" value=\"02\" />\n            <img src={imagemPergunta[0]} alt=\"Feminino\" />\n            <div>\n              <button id=\"audioResposta\" onClick={audio}>\n                <FiVolume2 />\n              </button>\n            </div>\n          </label>\n        </Row>\n        <Row>\n          <label htmlFor=\"03\">\n            <input type=\"radio\" name=\"opcao\" id=\"03\" value=\"03\" />\n            <img src={imagemPergunta[0]} alt=\"Masculino\" />\n            <div>\n              <button id=\"audioResposta\" onClick={audio}>\n                <FiVolume2 />\n              </button>\n            </div>\n          </label>\n          <label htmlFor=\"04\">\n            <input type=\"radio\" name=\"opcao\" id=\"04\" value=\"04\" />\n            <img src={imagemPergunta[0]} alt=\"Feminino\" />\n            <div>\n              <button id=\"audioResposta\" onClick={audio}>\n                <FiVolume2 />\n              </button>\n            </div>\n          </label>\n        </Row>\n      </Container>\n\n      <Container bsPrefix=\"acoes\">\n        <Row>\n          <Col>\n            <button id=\"anterior\" onClick={() => {}}>\n              <FiArrowLeft />\n              <strong>Anterior</strong>\n            </button>\n          </Col>\n          <Col>\n            <button id=\"proxima\" onClick={() => {}}>\n              <strong>Próxima</strong>\n              <FiArrowRight />\n            </button>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { FiArrowDownCircle } from 'react-icons/fi';\nimport api from '../../services/api';\nimport axios from 'axios';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\nimport data from './data.json';\nimport useSound from 'use-sound';\nimport musica from '../../assets/whatever.mp3';\nimport ResponsivePlayer from '../../Components/ResponsivePlayer';\nimport Quiz from '../../Components/Quiz';\n\nconst Main = () => {\n  const [play] = useSound(musica);\n\n  function download() {\n    axios({\n      url: 'https://resbackend.herokuapp.com/download', //your url\n      method: 'GET',\n      responseType: 'blob', // important\n    }).then((response) => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'desenho.jpg'); //or any other extension\n      document.body.appendChild(link);\n      link.click();\n    });\n  }\n\n  return (\n    <Jumbotron id=\"container\">\n      <header>\n        <h1>Res for kids</h1>\n      </header>\n\n      <Jumbotron id=\"conteudo\">\n        <Container bsPrefix=\"container\">\n          <Row>\n            <Col className=\"item1\">\n              <button id=\"Beolica\"></button>\n              <a href=\"#eolica\" id=\"Teolica\">\n                Energia Eólica\n              </a>\n            </Col>\n            <Col className=\"item2\">\n              <button id=\"Bsolar\"></button>\n              <a href=\"#solar\" id=\"Tsolar\">\n                Energia Solar\n              </a>\n            </Col>\n          </Row>\n        </Container>\n\n        <h1 id=\"eolica\">Energia Eólica</h1>\n        <ResponsivePlayer url=\"https://www.youtube.com/watch?v=4NRXx6U8ABQ\" />\n\n        <h1 id=\"quiz\">Quiz</h1>\n\n        <Quiz quizId={2} />\n\n        <Container>\n          <Row>\n            <Col>\n              {' '}\n              <button id=\"download\" onClick={download}>\n                <strong>Desenho_01</strong>\n                <FiArrowDownCircle />\n              </button>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <button id=\"download\" onClick={download}>\n                <strong>Desenho_01</strong>\n                <FiArrowDownCircle />\n              </button>\n            </Col>\n          </Row>\n        </Container>\n      </Jumbotron>\n    </Jumbotron>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\n\nimport Main from \"./pages/Main\";\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Route component={Main} path=\"/\" exact />\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport \"./App.css\";\nimport Routes from \"./routes\";\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}